/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
	"time"
)

// checks if the PatchedScheduleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedScheduleRequest{}

// PatchedScheduleRequest struct for PatchedScheduleRequest
type PatchedScheduleRequest struct {
	// The date after which the schedule will start running the test.
	Starts               NullableTime                   `json:"starts,omitempty"`
	Repeats              NullableScheduleRepeatsRequest `json:"repeats,omitempty"`
	Ends                 NullableScheduleEndsRequest    `json:"ends,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedScheduleRequest PatchedScheduleRequest

// NewPatchedScheduleRequest instantiates a new PatchedScheduleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedScheduleRequest() *PatchedScheduleRequest {
	this := PatchedScheduleRequest{}
	return &this
}

// NewPatchedScheduleRequestWithDefaults instantiates a new PatchedScheduleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedScheduleRequestWithDefaults() *PatchedScheduleRequest {
	this := PatchedScheduleRequest{}
	return &this
}

// GetStarts returns the Starts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedScheduleRequest) GetStarts() time.Time {
	if o == nil || IsNil(o.Starts.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Starts.Get()
}

// GetStartsOk returns a tuple with the Starts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedScheduleRequest) GetStartsOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Starts.Get(), o.Starts.IsSet()
}

// HasStarts returns a boolean if a field has been set.
func (o *PatchedScheduleRequest) HasStarts() bool {
	if o != nil && o.Starts.IsSet() {
		return true
	}

	return false
}

// SetStarts gets a reference to the given NullableTime and assigns it to the Starts field.
func (o *PatchedScheduleRequest) SetStarts(v time.Time) {
	o.Starts.Set(&v)
}

// SetStartsNil sets the value for Starts to be an explicit nil
func (o *PatchedScheduleRequest) SetStartsNil() {
	o.Starts.Set(nil)
}

// UnsetStarts ensures that no value is present for Starts, not even an explicit nil
func (o *PatchedScheduleRequest) UnsetStarts() {
	o.Starts.Unset()
}

// GetRepeats returns the Repeats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedScheduleRequest) GetRepeats() ScheduleRepeatsRequest {
	if o == nil || IsNil(o.Repeats.Get()) {
		var ret ScheduleRepeatsRequest
		return ret
	}
	return *o.Repeats.Get()
}

// GetRepeatsOk returns a tuple with the Repeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedScheduleRequest) GetRepeatsOk() (*ScheduleRepeatsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Repeats.Get(), o.Repeats.IsSet()
}

// HasRepeats returns a boolean if a field has been set.
func (o *PatchedScheduleRequest) HasRepeats() bool {
	if o != nil && o.Repeats.IsSet() {
		return true
	}

	return false
}

// SetRepeats gets a reference to the given NullableScheduleRepeatsRequest and assigns it to the Repeats field.
func (o *PatchedScheduleRequest) SetRepeats(v ScheduleRepeatsRequest) {
	o.Repeats.Set(&v)
}

// SetRepeatsNil sets the value for Repeats to be an explicit nil
func (o *PatchedScheduleRequest) SetRepeatsNil() {
	o.Repeats.Set(nil)
}

// UnsetRepeats ensures that no value is present for Repeats, not even an explicit nil
func (o *PatchedScheduleRequest) UnsetRepeats() {
	o.Repeats.Unset()
}

// GetEnds returns the Ends field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedScheduleRequest) GetEnds() ScheduleEndsRequest {
	if o == nil || IsNil(o.Ends.Get()) {
		var ret ScheduleEndsRequest
		return ret
	}
	return *o.Ends.Get()
}

// GetEndsOk returns a tuple with the Ends field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedScheduleRequest) GetEndsOk() (*ScheduleEndsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ends.Get(), o.Ends.IsSet()
}

// HasEnds returns a boolean if a field has been set.
func (o *PatchedScheduleRequest) HasEnds() bool {
	if o != nil && o.Ends.IsSet() {
		return true
	}

	return false
}

// SetEnds gets a reference to the given NullableScheduleEndsRequest and assigns it to the Ends field.
func (o *PatchedScheduleRequest) SetEnds(v ScheduleEndsRequest) {
	o.Ends.Set(&v)
}

// SetEndsNil sets the value for Ends to be an explicit nil
func (o *PatchedScheduleRequest) SetEndsNil() {
	o.Ends.Set(nil)
}

// UnsetEnds ensures that no value is present for Ends, not even an explicit nil
func (o *PatchedScheduleRequest) UnsetEnds() {
	o.Ends.Unset()
}

func (o PatchedScheduleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedScheduleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Starts.IsSet() {
		toSerialize["starts"] = o.Starts.Get()
	}
	if o.Repeats.IsSet() {
		toSerialize["repeats"] = o.Repeats.Get()
	}
	if o.Ends.IsSet() {
		toSerialize["ends"] = o.Ends.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedScheduleRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedScheduleRequest := _PatchedScheduleRequest{}

	err = json.Unmarshal(data, &varPatchedScheduleRequest)

	if err != nil {
		return err
	}

	*o = PatchedScheduleRequest(varPatchedScheduleRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "starts")
		delete(additionalProperties, "repeats")
		delete(additionalProperties, "ends")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedScheduleRequest struct {
	value *PatchedScheduleRequest
	isSet bool
}

func (v NullablePatchedScheduleRequest) Get() *PatchedScheduleRequest {
	return v.value
}

func (v *NullablePatchedScheduleRequest) Set(val *PatchedScheduleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedScheduleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedScheduleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedScheduleRequest(val *PatchedScheduleRequest) *NullablePatchedScheduleRequest {
	return &NullablePatchedScheduleRequest{value: val, isSet: true}
}

func (v NullablePatchedScheduleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedScheduleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
