/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
)

// checks if the ScheduleRepeatsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduleRepeatsRequest{}

// ScheduleRepeatsRequest struct for ScheduleRepeatsRequest
type ScheduleRepeatsRequest struct {
	// The unit type of the recurrence interval.  * `hourly` - hourly * `daily` - daily * `weekly` - weekly * `monthly` - monthly * `yearly` - yearly
	Frequency string `json:"frequency"`
	// The interval between each freq iteration. An interval of 2 with 'hourly' frequency means once every 2 hours.
	Interval *int32 `json:"interval,omitempty"`
	// When given, define the days of the week where the recurrence will be applied. The default is every day of the week.
	Days                 []string `json:"days,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ScheduleRepeatsRequest ScheduleRepeatsRequest

// NewScheduleRepeatsRequest instantiates a new ScheduleRepeatsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleRepeatsRequest(frequency string) *ScheduleRepeatsRequest {
	this := ScheduleRepeatsRequest{}
	this.Frequency = frequency
	var interval int32 = 1
	this.Interval = &interval
	return &this
}

// NewScheduleRepeatsRequestWithDefaults instantiates a new ScheduleRepeatsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleRepeatsRequestWithDefaults() *ScheduleRepeatsRequest {
	this := ScheduleRepeatsRequest{}
	var interval int32 = 1
	this.Interval = &interval
	return &this
}

// GetFrequency returns the Frequency field value
func (o *ScheduleRepeatsRequest) GetFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *ScheduleRepeatsRequest) GetFrequencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Frequency, true
}

// SetFrequency sets field value
func (o *ScheduleRepeatsRequest) SetFrequency(v string) {
	o.Frequency = v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *ScheduleRepeatsRequest) GetInterval() int32 {
	if o == nil || IsNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRepeatsRequest) GetIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *ScheduleRepeatsRequest) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *ScheduleRepeatsRequest) SetInterval(v int32) {
	o.Interval = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *ScheduleRepeatsRequest) GetDays() []string {
	if o == nil || IsNil(o.Days) {
		var ret []string
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRepeatsRequest) GetDaysOk() ([]string, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *ScheduleRepeatsRequest) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []string and assigns it to the Days field.
func (o *ScheduleRepeatsRequest) SetDays(v []string) {
	o.Days = v
}

func (o ScheduleRepeatsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduleRepeatsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["frequency"] = o.Frequency
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScheduleRepeatsRequest) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varScheduleRepeatsRequest := _ScheduleRepeatsRequest{}

	err = json.Unmarshal(data, &varScheduleRepeatsRequest)

	if err != nil {
		return err
	}

	*o = ScheduleRepeatsRequest(varScheduleRepeatsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "frequency")
		delete(additionalProperties, "interval")
		delete(additionalProperties, "days")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScheduleRepeatsRequest struct {
	value *ScheduleRepeatsRequest
	isSet bool
}

func (v NullableScheduleRepeatsRequest) Get() *ScheduleRepeatsRequest {
	return v.value
}

func (v *NullableScheduleRepeatsRequest) Set(val *ScheduleRepeatsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleRepeatsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleRepeatsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleRepeatsRequest(val *ScheduleRepeatsRequest) *NullableScheduleRepeatsRequest {
	return &NullableScheduleRepeatsRequest{value: val, isSet: true}
}

func (v NullableScheduleRepeatsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleRepeatsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
