/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
	"time"
)

// checks if the StaticIP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StaticIP{}

// StaticIP struct for StaticIP
type StaticIP struct {
	// Id of the Static IP.
	Id int32 `json:"id"`
	// Acquired IP address or null if the IP is still in the `provisioning` status.
	Ip NullableString `json:"ip,omitempty"`
	// The date and time the Static IP acquisition was requested.
	Created time.Time `json:"created"`
	// Provisioning status of the Static IP. Only the IPs with status `provisioned` areavailable in tests.  * `provisioning` - provisioning * `provisioned` - provisioned * `releasing` - releasing
	ProvisioningStatus string `json:"provisioning_status"`
	// Load zone identifier in form of (<vendor:countrycode:city>)
	LoadZone             string `json:"load_zone"`
	AdditionalProperties map[string]interface{}
}

type _StaticIP StaticIP

// NewStaticIP instantiates a new StaticIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStaticIP(id int32, created time.Time, provisioningStatus string, loadZone string) *StaticIP {
	this := StaticIP{}
	this.Id = id
	this.Created = created
	this.ProvisioningStatus = provisioningStatus
	this.LoadZone = loadZone
	return &this
}

// NewStaticIPWithDefaults instantiates a new StaticIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStaticIPWithDefaults() *StaticIP {
	this := StaticIP{}
	return &this
}

// GetId returns the Id field value
func (o *StaticIP) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StaticIP) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StaticIP) SetId(v int32) {
	o.Id = v
}

// GetIp returns the Ip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StaticIP) GetIp() string {
	if o == nil || IsNil(o.Ip.Get()) {
		var ret string
		return ret
	}
	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StaticIP) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// HasIp returns a boolean if a field has been set.
func (o *StaticIP) HasIp() bool {
	if o != nil && o.Ip.IsSet() {
		return true
	}

	return false
}

// SetIp gets a reference to the given NullableString and assigns it to the Ip field.
func (o *StaticIP) SetIp(v string) {
	o.Ip.Set(&v)
}

// SetIpNil sets the value for Ip to be an explicit nil
func (o *StaticIP) SetIpNil() {
	o.Ip.Set(nil)
}

// UnsetIp ensures that no value is present for Ip, not even an explicit nil
func (o *StaticIP) UnsetIp() {
	o.Ip.Unset()
}

// GetCreated returns the Created field value
func (o *StaticIP) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *StaticIP) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *StaticIP) SetCreated(v time.Time) {
	o.Created = v
}

// GetProvisioningStatus returns the ProvisioningStatus field value
func (o *StaticIP) GetProvisioningStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProvisioningStatus
}

// GetProvisioningStatusOk returns a tuple with the ProvisioningStatus field value
// and a boolean to check if the value has been set.
func (o *StaticIP) GetProvisioningStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningStatus, true
}

// SetProvisioningStatus sets field value
func (o *StaticIP) SetProvisioningStatus(v string) {
	o.ProvisioningStatus = v
}

// GetLoadZone returns the LoadZone field value
func (o *StaticIP) GetLoadZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoadZone
}

// GetLoadZoneOk returns a tuple with the LoadZone field value
// and a boolean to check if the value has been set.
func (o *StaticIP) GetLoadZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadZone, true
}

// SetLoadZone sets field value
func (o *StaticIP) SetLoadZone(v string) {
	o.LoadZone = v
}

func (o StaticIP) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StaticIP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Ip.IsSet() {
		toSerialize["ip"] = o.Ip.Get()
	}
	toSerialize["created"] = o.Created
	toSerialize["provisioning_status"] = o.ProvisioningStatus
	toSerialize["load_zone"] = o.LoadZone

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StaticIP) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varStaticIP := _StaticIP{}

	err = json.Unmarshal(data, &varStaticIP)

	if err != nil {
		return err
	}

	*o = StaticIP(varStaticIP)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "created")
		delete(additionalProperties, "provisioning_status")
		delete(additionalProperties, "load_zone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStaticIP struct {
	value *StaticIP
	isSet bool
}

func (v NullableStaticIP) Get() *StaticIP {
	return v.value
}

func (v *NullableStaticIP) Set(val *StaticIP) {
	v.value = val
	v.isSet = true
}

func (v NullableStaticIP) IsSet() bool {
	return v.isSet
}

func (v *NullableStaticIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStaticIP(val *StaticIP) *NullableStaticIP {
	return &NullableStaticIP{value: val, isSet: true}
}

func (v NullableStaticIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStaticIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
