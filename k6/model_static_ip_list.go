/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
)

// checks if the StaticIPList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StaticIPList{}

// StaticIPList struct for StaticIPList
type StaticIPList struct {
	// List of the Static IPs.
	Value                []StaticIP `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _StaticIPList StaticIPList

// NewStaticIPList instantiates a new StaticIPList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStaticIPList(value []StaticIP) *StaticIPList {
	this := StaticIPList{}
	this.Value = value
	return &this
}

// NewStaticIPListWithDefaults instantiates a new StaticIPList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStaticIPListWithDefaults() *StaticIPList {
	this := StaticIPList{}
	return &this
}

// GetValue returns the Value field value
func (o *StaticIPList) GetValue() []StaticIP {
	if o == nil {
		var ret []StaticIP
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *StaticIPList) GetValueOk() ([]StaticIP, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *StaticIPList) SetValue(v []StaticIP) {
	o.Value = v
}

func (o StaticIPList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StaticIPList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StaticIPList) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varStaticIPList := _StaticIPList{}

	err = json.Unmarshal(data, &varStaticIPList)

	if err != nil {
		return err
	}

	*o = StaticIPList(varStaticIPList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStaticIPList struct {
	value *StaticIPList
	isSet bool
}

func (v NullableStaticIPList) Get() *StaticIPList {
	return v.value
}

func (v *NullableStaticIPList) Set(val *StaticIPList) {
	v.value = val
	v.isSet = true
}

func (v NullableStaticIPList) IsSet() bool {
	return v.isSet
}

func (v *NullableStaticIPList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStaticIPList(val *StaticIPList) *NullableStaticIPList {
	return &NullableStaticIPList{value: val, isSet: true}
}

func (v NullableStaticIPList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStaticIPList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
