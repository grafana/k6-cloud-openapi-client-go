/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
)

// checks if the ProjectsList200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectsList200Response{}

// ProjectsList200Response struct for ProjectsList200Response
type ProjectsList200Response struct {
	// Object count in the collection
	Count *int32 `json:"@count,omitempty"`
	// A reference to the next page of results. The property is included until there are no more pages of results to retrieve.
	NextLink *string `json:"@nextLink,omitempty"`
	// List of the resulting values
	Value                []Project `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _ProjectsList200Response ProjectsList200Response

// NewProjectsList200Response instantiates a new ProjectsList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsList200Response(value []Project) *ProjectsList200Response {
	this := ProjectsList200Response{}
	this.Value = value
	return &this
}

// NewProjectsList200ResponseWithDefaults instantiates a new ProjectsList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsList200ResponseWithDefaults() *ProjectsList200Response {
	this := ProjectsList200Response{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ProjectsList200Response) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsList200Response) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ProjectsList200Response) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ProjectsList200Response) SetCount(v int32) {
	o.Count = &v
}

// GetNextLink returns the NextLink field value if set, zero value otherwise.
func (o *ProjectsList200Response) GetNextLink() string {
	if o == nil || IsNil(o.NextLink) {
		var ret string
		return ret
	}
	return *o.NextLink
}

// GetNextLinkOk returns a tuple with the NextLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsList200Response) GetNextLinkOk() (*string, bool) {
	if o == nil || IsNil(o.NextLink) {
		return nil, false
	}
	return o.NextLink, true
}

// HasNextLink returns a boolean if a field has been set.
func (o *ProjectsList200Response) HasNextLink() bool {
	if o != nil && !IsNil(o.NextLink) {
		return true
	}

	return false
}

// SetNextLink gets a reference to the given string and assigns it to the NextLink field.
func (o *ProjectsList200Response) SetNextLink(v string) {
	o.NextLink = &v
}

// GetValue returns the Value field value
func (o *ProjectsList200Response) GetValue() []Project {
	if o == nil {
		var ret []Project
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ProjectsList200Response) GetValueOk() ([]Project, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *ProjectsList200Response) SetValue(v []Project) {
	o.Value = v
}

func (o ProjectsList200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectsList200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["@count"] = o.Count
	}
	if !IsNil(o.NextLink) {
		toSerialize["@nextLink"] = o.NextLink
	}
	toSerialize["value"] = o.Value

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProjectsList200Response) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varProjectsList200Response := _ProjectsList200Response{}

	err = json.Unmarshal(data, &varProjectsList200Response)

	if err != nil {
		return err
	}

	*o = ProjectsList200Response(varProjectsList200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "@count")
		delete(additionalProperties, "@nextLink")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProjectsList200Response struct {
	value *ProjectsList200Response
	isSet bool
}

func (v NullableProjectsList200Response) Get() *ProjectsList200Response {
	return v.value
}

func (v *NullableProjectsList200Response) Set(val *ProjectsList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsList200Response(val *ProjectsList200Response) *NullableProjectsList200Response {
	return &NullableProjectsList200Response{value: val, isSet: true}
}

func (v NullableProjectsList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
