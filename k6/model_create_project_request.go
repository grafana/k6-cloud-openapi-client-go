/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
)

// checks if the CreateProjectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectRequest{}

// CreateProjectRequest struct for CreateProjectRequest
type CreateProjectRequest struct {
	// Project name.
	Name string `json:"name"`
	// Project description.
	Description *string `json:"description,omitempty"`
	// Project specific settings.
	Settings             *ProjectSettings `json:"settings,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateProjectRequest CreateProjectRequest

// NewCreateProjectRequest instantiates a new CreateProjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectRequest(name string) *CreateProjectRequest {
	this := CreateProjectRequest{}
	this.Name = name
	return &this
}

// NewCreateProjectRequestWithDefaults instantiates a new CreateProjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectRequestWithDefaults() *CreateProjectRequest {
	this := CreateProjectRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateProjectRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateProjectRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateProjectRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateProjectRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProjectRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateProjectRequest) SetDescription(v string) {
	o.Description = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *CreateProjectRequest) GetSettings() ProjectSettings {
	if o == nil || IsNil(o.Settings) {
		var ret ProjectSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRequest) GetSettingsOk() (*ProjectSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *CreateProjectRequest) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given ProjectSettings and assigns it to the Settings field.
func (o *CreateProjectRequest) SetSettings(v ProjectSettings) {
	o.Settings = &v
}

func (o CreateProjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateProjectRequest) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varCreateProjectRequest := _CreateProjectRequest{}

	err = json.Unmarshal(data, &varCreateProjectRequest)

	if err != nil {
		return err
	}

	*o = CreateProjectRequest(varCreateProjectRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "settings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateProjectRequest struct {
	value *CreateProjectRequest
	isSet bool
}

func (v NullableCreateProjectRequest) Get() *CreateProjectRequest {
	return v.value
}

func (v *NullableCreateProjectRequest) Set(val *CreateProjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectRequest(val *CreateProjectRequest) *NullableCreateProjectRequest {
	return &NullableCreateProjectRequest{value: val, isSet: true}
}

func (v NullableCreateProjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
