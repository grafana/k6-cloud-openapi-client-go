/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
)

// checks if the StaticIPReleaseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StaticIPReleaseRequest{}

// StaticIPReleaseRequest struct for StaticIPReleaseRequest
type StaticIPReleaseRequest struct {
	// List of Static IPs IDs to release and delete.
	Ids                  []int32 `json:"ids"`
	AdditionalProperties map[string]interface{}
}

type _StaticIPReleaseRequest StaticIPReleaseRequest

// NewStaticIPReleaseRequest instantiates a new StaticIPReleaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStaticIPReleaseRequest(ids []int32) *StaticIPReleaseRequest {
	this := StaticIPReleaseRequest{}
	this.Ids = ids
	return &this
}

// NewStaticIPReleaseRequestWithDefaults instantiates a new StaticIPReleaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStaticIPReleaseRequestWithDefaults() *StaticIPReleaseRequest {
	this := StaticIPReleaseRequest{}
	return &this
}

// GetIds returns the Ids field value
func (o *StaticIPReleaseRequest) GetIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *StaticIPReleaseRequest) GetIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *StaticIPReleaseRequest) SetIds(v []int32) {
	o.Ids = v
}

func (o StaticIPReleaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StaticIPReleaseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ids"] = o.Ids

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StaticIPReleaseRequest) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varStaticIPReleaseRequest := _StaticIPReleaseRequest{}

	err = json.Unmarshal(data, &varStaticIPReleaseRequest)

	if err != nil {
		return err
	}

	*o = StaticIPReleaseRequest(varStaticIPReleaseRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStaticIPReleaseRequest struct {
	value *StaticIPReleaseRequest
	isSet bool
}

func (v NullableStaticIPReleaseRequest) Get() *StaticIPReleaseRequest {
	return v.value
}

func (v *NullableStaticIPReleaseRequest) Set(val *StaticIPReleaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStaticIPReleaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStaticIPReleaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStaticIPReleaseRequest(val *StaticIPReleaseRequest) *NullableStaticIPReleaseRequest {
	return &NullableStaticIPReleaseRequest{value: val, isSet: true}
}

func (v NullableStaticIPReleaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStaticIPReleaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
