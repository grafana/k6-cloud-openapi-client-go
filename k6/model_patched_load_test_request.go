/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
)

// checks if the PatchedLoadTestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedLoadTestRequest{}

// PatchedLoadTestRequest struct for PatchedLoadTestRequest
type PatchedLoadTestRequest struct {
	// Unique name of the test within the project
	Name *string `json:"name,omitempty"`
	// Id of a baseline test run used for results comparison
	BaselineTestRunId    NullableInt32 `json:"baseline_test_run_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedLoadTestRequest PatchedLoadTestRequest

// NewPatchedLoadTestRequest instantiates a new PatchedLoadTestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedLoadTestRequest() *PatchedLoadTestRequest {
	this := PatchedLoadTestRequest{}
	return &this
}

// NewPatchedLoadTestRequestWithDefaults instantiates a new PatchedLoadTestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedLoadTestRequestWithDefaults() *PatchedLoadTestRequest {
	this := PatchedLoadTestRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedLoadTestRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLoadTestRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedLoadTestRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedLoadTestRequest) SetName(v string) {
	o.Name = &v
}

// GetBaselineTestRunId returns the BaselineTestRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedLoadTestRequest) GetBaselineTestRunId() int32 {
	if o == nil || IsNil(o.BaselineTestRunId.Get()) {
		var ret int32
		return ret
	}
	return *o.BaselineTestRunId.Get()
}

// GetBaselineTestRunIdOk returns a tuple with the BaselineTestRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedLoadTestRequest) GetBaselineTestRunIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BaselineTestRunId.Get(), o.BaselineTestRunId.IsSet()
}

// HasBaselineTestRunId returns a boolean if a field has been set.
func (o *PatchedLoadTestRequest) HasBaselineTestRunId() bool {
	if o != nil && o.BaselineTestRunId.IsSet() {
		return true
	}

	return false
}

// SetBaselineTestRunId gets a reference to the given NullableInt32 and assigns it to the BaselineTestRunId field.
func (o *PatchedLoadTestRequest) SetBaselineTestRunId(v int32) {
	o.BaselineTestRunId.Set(&v)
}

// SetBaselineTestRunIdNil sets the value for BaselineTestRunId to be an explicit nil
func (o *PatchedLoadTestRequest) SetBaselineTestRunIdNil() {
	o.BaselineTestRunId.Set(nil)
}

// UnsetBaselineTestRunId ensures that no value is present for BaselineTestRunId, not even an explicit nil
func (o *PatchedLoadTestRequest) UnsetBaselineTestRunId() {
	o.BaselineTestRunId.Unset()
}

func (o PatchedLoadTestRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedLoadTestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.BaselineTestRunId.IsSet() {
		toSerialize["baseline_test_run_id"] = o.BaselineTestRunId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedLoadTestRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedLoadTestRequest := _PatchedLoadTestRequest{}

	err = json.Unmarshal(data, &varPatchedLoadTestRequest)

	if err != nil {
		return err
	}

	*o = PatchedLoadTestRequest(varPatchedLoadTestRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "baseline_test_run_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedLoadTestRequest struct {
	value *PatchedLoadTestRequest
	isSet bool
}

func (v NullablePatchedLoadTestRequest) Get() *PatchedLoadTestRequest {
	return v.value
}

func (v *NullablePatchedLoadTestRequest) Set(val *PatchedLoadTestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedLoadTestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedLoadTestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedLoadTestRequest(val *PatchedLoadTestRequest) *NullablePatchedLoadTestRequest {
	return &NullablePatchedLoadTestRequest{value: val, isSet: true}
}

func (v NullablePatchedLoadTestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedLoadTestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
