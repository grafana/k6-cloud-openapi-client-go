/*


HTTP API for interacting with k6 Cloud.

API version: 0.0.0
Contact: info@grafana.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package k6

import (
	"encoding/json"
)

// checks if the TestRunStatusExtra type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunStatusExtra{}

// TestRunStatusExtra Extra information specific to the test run status.
type TestRunStatusExtra struct {
	// The user that set the status if applicable.
	ByUser *int32 `json:"by_user,omitempty"`
	// Human-readable string describing the error if applicable.
	Message *string `json:"message,omitempty"`
	// Service-defined error code if applicable.
	Code                 *string `json:"code,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TestRunStatusExtra TestRunStatusExtra

// NewTestRunStatusExtra instantiates a new TestRunStatusExtra object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunStatusExtra() *TestRunStatusExtra {
	this := TestRunStatusExtra{}
	return &this
}

// NewTestRunStatusExtraWithDefaults instantiates a new TestRunStatusExtra object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunStatusExtraWithDefaults() *TestRunStatusExtra {
	this := TestRunStatusExtra{}
	return &this
}

// GetByUser returns the ByUser field value if set, zero value otherwise.
func (o *TestRunStatusExtra) GetByUser() int32 {
	if o == nil || IsNil(o.ByUser) {
		var ret int32
		return ret
	}
	return *o.ByUser
}

// GetByUserOk returns a tuple with the ByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunStatusExtra) GetByUserOk() (*int32, bool) {
	if o == nil || IsNil(o.ByUser) {
		return nil, false
	}
	return o.ByUser, true
}

// HasByUser returns a boolean if a field has been set.
func (o *TestRunStatusExtra) HasByUser() bool {
	if o != nil && !IsNil(o.ByUser) {
		return true
	}

	return false
}

// SetByUser gets a reference to the given int32 and assigns it to the ByUser field.
func (o *TestRunStatusExtra) SetByUser(v int32) {
	o.ByUser = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TestRunStatusExtra) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunStatusExtra) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TestRunStatusExtra) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TestRunStatusExtra) SetMessage(v string) {
	o.Message = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TestRunStatusExtra) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunStatusExtra) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TestRunStatusExtra) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *TestRunStatusExtra) SetCode(v string) {
	o.Code = &v
}

func (o TestRunStatusExtra) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunStatusExtra) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ByUser) {
		toSerialize["by_user"] = o.ByUser
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TestRunStatusExtra) UnmarshalJSON(data []byte) (err error) {
	varTestRunStatusExtra := _TestRunStatusExtra{}

	err = json.Unmarshal(data, &varTestRunStatusExtra)

	if err != nil {
		return err
	}

	*o = TestRunStatusExtra(varTestRunStatusExtra)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "by_user")
		delete(additionalProperties, "message")
		delete(additionalProperties, "code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTestRunStatusExtra struct {
	value *TestRunStatusExtra
	isSet bool
}

func (v NullableTestRunStatusExtra) Get() *TestRunStatusExtra {
	return v.value
}

func (v *NullableTestRunStatusExtra) Set(val *TestRunStatusExtra) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunStatusExtra) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunStatusExtra) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunStatusExtra(val *TestRunStatusExtra) *NullableTestRunStatusExtra {
	return &NullableTestRunStatusExtra{value: val, isSet: true}
}

func (v NullableTestRunStatusExtra) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunStatusExtra) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
